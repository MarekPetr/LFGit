.TH git-annex-get 1
.SH NAME
git-annex-get \- make content of annexed files available
.PP
.SH SYNOPSIS
git annex get \fB[path ...]\fP
.PP
.SH DESCRIPTION
Makes the content of annexed files available in this repository. This
will involve copying them from a remote repository, or downloading them,
or transferring them from some kind of key\-value store.
.PP
.SH OPTIONS
.IP "\fB\-\-auto\fP"
.IP
Rather than getting all files, get only files that don't yet have
the desired number of copies, or that are preferred content of the
repository. See git-annex\-preferred\-content(1)
.IP
.IP "\fB\-\-from=remote\fP"
Normally git-annex will choose which remotes to get the content
from, preferring remotes with lower costs. Use this option to specify
which remote to use. 
.IP
Any files that are not available on the remote will be silently skipped.
.IP
.IP "\fB\-\-jobs=N\fP \fB\-JN\fP"
Enables parallel download with up to the specified number of jobs
running at once. For example: \fB\-J10\fP
.IP
Setting this to "cpus" will run one job per CPU core.
.IP
When files can be downloaded from multiple remotes, enabling parallel
downloads will split the load between the remotes. For example, if
the files are available on remotes A and B, then one file will be
downloaded from A, and another file will be downloaded from B in
parallel. (Remotes with lower costs are still preferred over higher cost
remotes.)
.IP
.IP "file matching options"
The git-annex\-matching\-options(1)
can be used to specify files to get.
.IP
.IP "\fB\-\-incomplete\fP"
Resume any incomplete downloads of files that were started and
interrupted at some point previously. Useful to pick up where you left
off ... when you don't quite remember where that was.
.IP
These incomplete files are the same ones that are
listed as unused temp files by git-annex\-unused(1).
.IP
Note that the git-annex key will be displayed when downloading,
as git-annex does not know the associated file, and the associated file
may not even be in the current git working directory.
.IP
.IP "\fB\-\-all\fP \fB\-A\fP"
Rather than specifying a filename or path to get, this option can be
used to get all available versions of all files.
.IP
This is the default behavior when running git-annex in a bare repository.
.IP
.IP "\fB\-\-branch=ref\fP"
Operate on files in the specified branch or treeish.
.IP
.IP "\fB\-\-unused\fP"
Operate on files found by last run of git-annex unused.
.IP
.IP "\fB\-\-failed\fP"
Operate on files that have recently failed to be transferred.
.IP
Not to be confused with \fB\-\-incomplete\fP which resumes only downloads
that managed to transfer part of the content of a file.
.IP
.IP "\fB\-\-key=keyname\fP"
Use this option to get a specified key.
.IP
.IP "\fB\-\-batch\fP"
Enables batch mode, in which lines containing names of files to get
are read from stdin.
.IP
As each specified file is processed, the usual progress output is
displayed. If the specified file's content is already present, 
or it does not match specified matching options, or
it is not an annexed file, a blank line is output in response instead.
.IP
Since the usual output while getting a file is verbose and not
machine\-parseable, you may want to use \-\-json in combination with
\-\-batch.
.IP
.IP "\fB\-z\fP"
Makes the \fB\-\-batch\fP input be delimited by nulls instead of the usual
newlines.
.IP
.IP "\fB\-\-json\fP"
Enable JSON output. This is intended to be parsed by programs that use
git-annex. Each line of output is a JSON object.
.IP
.IP "\fB\-\-json\-progress\fP"
Include progress objects in JSON output.
.IP
.IP "\fB\-\-json\-error\-messages\fP"
Messages that would normally be output to standard error are included in
the json instead.
.IP
.SH SEE ALSO
git-annex(1)
.PP
git-annex\-drop(1)
.PP
git-annex\-copy(1)
.PP
git-annex\-move(1)
.PP
.SH AUTHOR
Joey Hess <id@joeyh.name>
.PP
.PP

