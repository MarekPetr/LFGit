.TH git-annex-whereis 1
.SH NAME
git-annex-whereis \- lists repositories that have file content
.PP
.SH SYNOPSIS
git annex whereis \fB[path ...]\fP
.PP
.SH DESCRIPTION
Displays information about where the contents of files are located.
.PP
For example:
.PP
 # git annex whereis
 whereis my_cool_big_file (1 copy)
 	0c443de8\-e644\-11df\-acbf\-f7cd7ca6210d  \-\- laptop
 whereis other_file (3 copies)
 	0c443de8\-e644\-11df\-acbf\-f7cd7ca6210d  \-\- laptop
 	62b39bbe\-4149\-11e0\-af01\-bb89245a1e61  \-\- usb drive [here]
 	7570b02e\-15e9\-11e0\-adf0\-9f3f94cb2eaa  \-\- backup drive
.PP
Note that this command does not contact remotes to verify if they still
have the content of files. It only reports on the last information that was
received from remotes.
.PP
.SH OPTIONS
.IP "file matching options"
.IP
The git-annex\-matching\-options(1)
can be used to specify files to act on.
.IP
.IP "\fB\-\-key=keyname\fP"
Show where a particular git-annex key is located.
.IP
.IP "\fB\-\-all\fP \fB\-A\fP"
Show whereis information for all known keys.
.IP
.IP "\fB\-\-branch=ref\fP"
Show whereis information for files in the specified branch or treeish.
.IP
.IP "\fB\-\-unused\fP"
Show whereis information for files found by last run of git-annex unused.
.IP
.IP "\fB\-\-batch\fP"
Enables batch mode, in which a file is read in a line from stdin,
its information displayed, and repeat.
.IP
Note that if the file is not an annexed file, or does not match
specified file matching options, an empty line will be
output instead.
.IP
.IP "\fB\-z\fP"
Makes the \fB\-\-batch\fP input be delimited by nulls instead of the usual
newlines.
.IP
.IP "\fB\-\-json\fP"
Enable JSON output. This is intended to be parsed by programs that use
git-annex. Each line of output is a JSON object.
.IP
.IP "\fB\-\-json\-error\-messages\fP"
Messages that would normally be output to standard error are included in
the json instead.
.IP
.SH SEE ALSO
git-annex(1)
.PP
git-annex\-find(1)
.PP
git-annex\-list(1)
.PP
.SH AUTHOR
Joey Hess <id@joeyh.name>
.PP
.PP

