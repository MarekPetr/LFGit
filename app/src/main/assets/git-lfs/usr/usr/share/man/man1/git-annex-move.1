.TH git-annex-move 1
.SH NAME
git-annex-move \- move content of files to/from another repository
.PP
.SH SYNOPSIS
git annex move \fB[path ...] [\-\-from=remote|\-\-to=remote|\-\-to=here]\fP
.PP
.SH DESCRIPTION
Moves the content of files from or to another remote.
.PP
.SH OPTIONS
.IP "\fB\-\-from=remote\fP"
.IP
Move the content of files from the specified remote to the local repository.
.IP
.IP "\fB\-\-to=remote\fP"
Move the content of files from the local repository to the specified remote.
.IP
.IP "\fB\-\-to=here\fP"
Move the content of files from all reachable remotes to the local
repository.
.IP
.IP "\fB\-\-force\fP"
Override numcopies and required content checking, and always remove
files from the source repository once the destination repository has a
copy.
.IP
Note that, even without this option, you can move the content of a file
from one repository to another when numcopies is not satisfied, as long
as the move does not result in there being fewer copies.
.IP
.IP "\fB\-\-jobs=N\fP \fB\-JN\fP"
Enables parallel transfers with up to the specified number of jobs
running at once. For example: \fB\-J10\fP
.IP
Setting this to "cpus" will run one job per CPU core.
.IP
.IP "\fB\-\-all\fP \fB\-A\fP"
Rather than specifying a filename or path to move, this option can be
used to move all available versions of all files.
.IP
This is the default behavior when running git-annex in a bare repository.
.IP
.IP "\fB\-\-branch=ref\fP"
Operate on files in the specified branch or treeish.
.IP
.IP "\fB\-\-unused\fP"
Operate on files found by last run of git-annex unused.
.IP
.IP "\fB\-\-failed\fP"
Operate on files that have recently failed to be transferred.
.IP
.IP "\fB\-\-key=keyname\fP"
Use this option to move a specified key.
.IP
.IP "\fB\-\-fast\fP"
When moving content to a remote, avoid a round trip to check if the remote
already has content. This can be faster, but might skip moving content
to the remote in some cases.
.IP
.IP "file matching options"
The git-annex\-matching\-options(1)
can be used to specify files to move.
.IP
.IP "\fB\-\-batch\fP"
Enables batch mode, in which lines containing names of files to move
are read from stdin.
.IP
As each specified file is processed, the usual progress output is
displayed. If a file's content does not need to be moved,
or it does not match specified matching options, or it
is not an annexed file, a blank line is output in response instead.
.IP
Since the usual output while moving a file is verbose and not
machine\-parseable, you may want to use \-\-json in combination with
\-\-batch.
.IP
.IP "\fB\-z\fP"
Makes the \fB\-\-batch\fP input be delimited by nulls instead of the usual
newlines.
.IP
.IP "\fB\-\-json\fP"
Enable JSON output. This is intended to be parsed by programs that use
git-annex. Each line of output is a JSON object.
.IP
.IP "\fB\-\-json\-progress\fP"
Include progress objects in JSON output.
.IP
.IP "\fB\-\-json\-error\-messages\fP"
Messages that would normally be output to standard error are included in
the json instead.
.IP
.SH SEE ALSO
git-annex(1)
.PP
git-annex\-get(1)
.PP
git-annex\-copy(1)
.PP
git-annex\-drop(1)
.PP
.SH AUTHOR
Joey Hess <id@joeyh.name>
.PP
.PP

