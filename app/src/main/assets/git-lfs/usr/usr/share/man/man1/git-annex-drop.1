.TH git-annex-drop 1
#a NAME
.PP
git-annex drop \- remove content of files from repository
.PP
.SH SYNOPSIS
git annex drop \fB[path ...]\fP
.PP
.SH DESCRIPTION
Drops the content of annexed files from this repository, when
possible.
.PP
git-annex will refuse to drop content if it cannot verify it is
safe to do so. Usually this involves verifying that the content is stored
in some other repository.
.PP
Content that is required to be stored in the repository will not be dropped
even if enough copies exist elsewhere. See git-annex\-required(1).
.PP
.SH OPTIONS
.IP "\fB\-\-from=remote\fP"
.IP
Rather than dropping the content of files in the local repository,
this option can specify a remote from which the files'
contents should be removed.
.IP
.IP "\fB\-\-auto\fP"
Rather than trying to drop all specified files, drop only files that
are not preferred content of the repository.
See git-annex\-preferred\-content(1)
.IP
.IP "\fB\-\-force\fP"
Use this option with care! It bypasses safety checks, and forces
git-annex to delete the content of the specified files, even from
the last repository that is storing their content. Data loss can
result from using this option.
.IP
.IP "\fB\-\-all\fP \fB\-A\fP"
Rather than specifying a filename or path to drop, this option can be
used to drop all available versions of all files.
.IP
This is the default behavior when running git-annex drop in a bare repository.
.IP
Note that this bypasses checking the .gitattributes annex.numcopies
setting and required content settings.
.IP
.IP "\fB\-\-branch=ref\fP"
Drop files in the specified branch or treeish.
.IP
Note that this bypasses checking the .gitattributes annex.numcopies
setting and required content settings.
.IP
.IP "\fB\-\-unused\fP"
Drop files found by last run of git-annex unused.
.IP
Note that this bypasses checking the .gitattributes annex.numcopies
setting and required content settings.
.IP
.IP "\fB\-\-key=keyname\fP"
Use this option to drop a specified key.
.IP
Note that this bypasses checking the .gitattributes annex.numcopies
setting and required content settings.
.IP
.IP "file matching options"
The git-annex\-matching\-options(1)
can be used to specify files to drop.
.IP
.IP "\fB\-\-jobs=N\fP \fB\-JN\fP"
Runs multiple drop jobs in parallel. This is particularly useful
when git-annex has to contact remotes to check if it can drop files.
For example: \fB\-J4\fP  
.IP
Setting this to "cpus" will run one job per CPU core.
.IP
.IP "\fB\-\-batch\fP"
Enables batch mode, in which lines containing names of files to drop
are read from stdin.
.IP
As each specified file is processed, the usual output is
displayed. If a file's content is not present, or it does not
match specified matching options, or it is not an annexed file,
a blank line is output in response instead.
.IP
.IP "\fB\-z\fP"
Makes the \fB\-\-batch\fP input be delimited by nulls instead of the usual
newlines.
.IP
.IP "\fB\-\-json\fP"
Enable JSON output. This is intended to be parsed by programs that use
git-annex. Each line of output is a JSON object.
.IP
.IP "\fB\-\-json\-error\-messages\fP"
Messages that would normally be output to standard error are included in
the json instead.
.IP
.SH SEE ALSO
git-annex(1)
.PP
git-annex\-get(1)
.PP
git-annex\-move(1)
.PP
git-annex\-copy(1)
.PP
.SH AUTHOR
Joey Hess <id@joeyh.name>
.PP
.PP

