.TH git-annex-adjust 1
.SH NAME
git-annex-adjust \- enter an adjusted branch
.PP
.SH SYNOPSIS
git annex adjust \fB\-\-unlock|\-\-lock|\-\-fix|\-\-hide\-missing [\-\-unlock|\-\-lock|\-\-fix]\fP
.PP
.SH DESCRIPTION
Enters an adjusted form of the current branch. The annexed files will
be treated differently. For example with \-\-unlock all annexed files will
be unlocked.
.PP
The adjusted branch will have a name like "adjusted/master(unlocked)".
Since it's a regular git branch, you can use \fBgit checkout\fP to switch
back to the original branch at any time.
.PP
While in the adjusted branch, you can use git-annex and git commands as
usual. Any commits that you make will initially only be made to the
adjusted branch. 
.PP
To propagate commits from the adjusted branch back to the original branch,
and to other repositories, as well as to merge in changes from other
repositories, run \fBgit annex sync\fP.
.PP
When in an adjusted branch, using \fBgit merge otherbranch\fP is often not
ideal, because merging a non\-adjusted branch may lead to unncessary
merge conflicts, or add files in non\-adjusted form. To avoid those
problems, use \fBgit annex merge otherbranch\fP.
.PP
Re\-running this command with the same options
while inside the adjusted branch will update the adjusted branch
as necessary (eg for \fB\-\-hide\-missing\fP), and will also propagate commits
back to the original branch.
.PP
.SH OPTIONS
.IP "\fB\-\-unlock\fP"
.IP
Unlock all annexed files in the adjusted branch. This allows
annexed files to be modified.
.IP
Normally, unlocking a file requires a copy to be made of its content,
so that its original content is preserved, while the copy can be modified.
To use less space, annex.thin can be set to true before running this
command; this makes a hard link to the content be made instead of a copy.
(When supported by the file system.) While this can save considerable
disk space, any modification made to a file will cause the old version of the
file to be lost from the local repository. So, enable annex.thin with care.
.IP
When in an adjusted unlocked branch, \fBgit annex add\fP will add files
unlocked instead of the default behavior of adding them locked.
.IP
.IP "\fB\-\-lock\fP"
Lock all annexed file in the adjusted branch. This may be preferred
by those who like seeing broken symlinks when the content of an
annexed file is not present.
.IP
When in an adjusted locked branch, \fBgit annex add\fP will add files locked,
as usual. However, \fBgit add\fP (and \fBgit commit \-a\fP etc) still add files
unlocked. This is because it's not possible for those git commands to
add files locked.
.IP
.IP "\fB\-\-fix\fP"
Fix the symlinks to annexed files to point to the local git annex
object directory. This can be useful if a repository is checked out in an
unusual way that prevents the symlinks committed to git from pointing at
the annex objects.
.IP
.IP "\fB\-\-hide\-missing\fP"
Only include annexed files in the adjusted branch when their content
is present.
.IP
The adjusted branch is not immediately changed when content availability
changes, so if you \fBgit annex drop\fP files, they will become broken
links in the usual way. And when files that were missing are copied into the
repository from elsewhere, they won't immediatly become visible in the
branch.
.IP
To update the adjusted branch to reflect changes to content availability, 
run \fBgit annex adjust \-\-hide\-missing\fP again.
.IP
Despite missing files being hidden, \fBgit annex sync \-\-content\fP will
still operate on them, and can be used to download missing
files from remotes.
.IP
This option can be combined with \-\-unlock, \-\-lock, or \-\-fix.
.IP
.SH SEE ALSO
git-annex(1)
.PP
git-annex\-unlock(1)
.PP
git-annex\-upgrade(1)
.PP
git-annex\-sync(1)
.PP
.SH AUTHOR
Joey Hess <id@joeyh.name>
.PP
.PP

